# dma.c
kvx_dma_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64

# mem.c
kvx_dma_tx_pgrm_mem_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_pgrm_mem_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64

kvx_dma_tx_pgrm_table_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_pgrm_table_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64

kvx_dma_noc_route_table_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_noc_route_table_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64

kvx_dma_bw_limiter_table_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_bw_limiter_table_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64

# rx-channel.c
kvx_dma_rx_channel_read(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_rx_channel_write(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64

# tx-thread.c
kvx_dma_tx_thread_read(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_thread_write(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_thread_state(size_t id, uint16_t pc, uint16_t strobe, uint32_t dcnt0, uint32_t dcnt1, uint32_t dcnt2, uint32_t dcnt3, uint64_t rptr, uint64_t wptr) "id: %zu, pc: 0x02%" PRIx16 ", strobe: 0x%" PRIx16 ", dnct={%" PRIu32 ",%" PRIu32 ",%" PRIu32 ",%" PRIu32"}, rptr:%" PRIx64 ", wptr:%" PRIx64

kvx_dma_tx_thread_load_mem(size_t id, uint64_t addr, uint64_t data, size_t sz) "id: %zu, addr: 0x%" PRIx64 ", data: 0x%" PRIx64 ", size: %zu"
kvx_dma_tx_thread_store_mem(size_t id, uint64_t addr, uint64_t data, size_t sz, uint16_t strobe) "id: %zu, addr: 0x%" PRIx64 ", data: 0x%" PRIx64 ", size: %zu, strobe: 0x%" PRIx16

kvx_dma_tx_thread_load_mem128(size_t id, uint64_t addr, uint64_t dhi, uint64_t dlo) "id: %zu, addr: 0x%" PRIx64 ", data: 0x%" PRIx64 "%016" PRIx64 ", size: 16"
kvx_dma_tx_thread_store_mem128(size_t id, uint64_t addr, uint64_t dhi, uint64_t dlo, uint16_t strobe) "id: %zu, addr: 0x%" PRIx64 ", data: 0x%" PRIx64 "%016" PRIx64 ", size: 16, strobe: 0x%" PRIx16

kvx_dma_tx_thread_exec_bundle(size_t id, size_t pgrm_id, unsigned int pc) "id: %zu, pgrm_id: %zu, pc: 0x%02x"
kvx_dma_tx_thread_invalid_bundle(size_t id, size_t pgrm_id, unsigned int pc, uint64_t bundle) "id: %zu, pgrm_id: %zu, pc: 0x%02x, faulty bundle: %" PRIx64
kvx_dma_tx_thread_disas_bundle(size_t id, size_t pgrm_id, unsigned int pc, const char *disas) "id: %zu, pgrm_id: %zu, pc: 0x%02x%s"

kvx_dma_tx_thread_error(size_t id, const char *err) "id: %zu, %s"

# tx-job-queue.c
kvx_dma_tx_job_queue_read(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_job_queue_write(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_job_queue_error(size_t id, const char *err) "id: %zu, %s"

# tx-comp-queue.c
kvx_dma_tx_comp_queue_read(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_comp_queue_write(size_t id, uint64_t offset, uint64_t value) "id: %zu, offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_tx_comp_queue_notify(size_t id, uint64_t addr, uint64_t arg) "id: %zu, notify addr:0x%" PRIx64 ", notify arg: 0x%" PRIx64
kvx_dma_tx_comp_queue_error(size_t id, const char *err) "id: %zu, %s"

# irq-errors.c
kvx_dma_errors_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_errors_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_it_read(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_it_write(uint64_t offset, uint64_t value) "offset:0x%" PRIx64 ", value:0x%" PRIx64
kvx_dma_global_error(const char *err) "%s"
